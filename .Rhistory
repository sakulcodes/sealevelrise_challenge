install.packages("ncdf4")
install.packages("raster")
library(ncdf4) ; library(raster)
data <- nc_open("/Users/sakul/Desktop/SLR-Challenge/1993/01/dt_global_twostat_phy_14_19930101_vDT2021.nc")
data <- nc_open("/Users/sakul/Desktop/SLR-Challenge/1993/01/dt_global_twostat_phy_I4_19930101_vDT2021.nc")
data <- nc_open("/Users/sakul/Desktop/SLR-Challenge/1993/01/dt_global_twostat_phy_i4_19930101_vDT2021.nc")
data <- nc_open("/Users/sakul/Desktop/SLR-Challenge/1993/01/dt_global_twostat_phy_l4_19930101_vDT2021.nc")
data <- nc_open("/Users/sakul/Desktop/SLR-Challenge/1993/01/dt_global_twosat_phy_l4_19930101_vDT2021.nc")
head(data)
print(data)
variable_data <- ncvar_get(data, "variable_name")
names(data$var)
length(names(data$var))
variable_data <- ncvar_get(ncfile, "crs")
variable_data <- ncvar_get(data, "crs")
variable_data
variable_data <- ncvar_get(data, "vgos")
variable_data
dim(variable_data)
raster_brick <- brick("/Users/sakul/Desktop/SLR-Challenge/1993/01/dt_global_twosat_phy_l4_19930101_vDT2021.nc")
print(raster_brik)
print(raster_brik)
raster_brick <- brick("/Users/sakul/Desktop/SLR-Challenge/1993/01/dt_global_twosat_phy_l4_19930101_vDT2021.nc")
print(raster_brik)
variable_data <- ncvar_get(data, "crs")
variable_data
variable_data <- ncvar_get(data, "flag_ice")
variable_data
dim(flagice)
dim(variable_data)
print(raster_brick)
raster_brick <- brick("/Users/sakul/Desktop/SLR-Challenge/1993/01/dt_global_twosat_phy_l4_19930101_vDT2021.nc")
print(raster_brick)
print(data) #prints the summary
nc_path = "/Users/sakul/Desktop/SLR-Challenge/1993/01/dt_global_twosat_phy_l4_19930101_vDT2021.nc"
sla_raster <- raster(nc_path, varname="sla", band=1)  # Assuming band 1 is the first day of 1993
bbox <- c(-90.1, 29.9, -89.9, 30.1) # Example coordinates, replace with your area of interest
query <- opq(bbox = bbox) %>%
add_osm_feature(key = "residential") # Example to get roads, adjust as needed
bbox <- c(-90.1, 29.9, -89.9, 30.1) # Example coordinates, replace with your area of interest
query <- opq(bbox = bbox) %>%
add_osm_feature(key = "residential") # Example to get roads, adjust as needed
library(ggplot2) ; library(sf) ; library(rnaturalearth); library(osmdata); library(tmap)
bbox <- c(-90.1, 29.9, -89.9, 30.1) # Example coordinates, replace with your area of interest
query <- opq(bbox = bbox) %>%
add_osm_feature(key = "residential") # Example to get roads, adjust as needed
data <- osmdata_sf(query)
ggplot() +
geom_sf(data = data$osm_lines) + # Plot roads
geom_sf(data = data$osm_polygons, fill = "green", alpha = 0.5) + # Plot areas like parks, water, etc.
theme_minimal()
tm_shape(data$osm_lines) +
tm_lines() +
tm_shape(data$osm_polygons) +
tm_fill(col = "green", alpha = 0.5) +
tm_borders()
bbox <- c(-81, 25,  # Min longitude (west), Min latitude (south)
-66, 47)
query <- opq(bbox = bbox) %>%
add_osm_feature(key = "residential") # Example to get roads, adjust as needed
data <- osmdata_sf(query)
ggplot() +
geom_sf(data = data$osm_lines) + # Plot roads
geom_sf(data = data$osm_polygons, fill = "green", alpha = 0.5) + # Plot areas like parks, water, etc.
theme_minimal()
ggplot() +
geom_sf(data = data$osm_lines) + # Plot roads
geom_sf(data = data$osm_polygons, fill = "green", alpha = 0.5) + # Plot areas like parks, water, etc.
theme_minimal()
tm_shape(data$osm_lines) +
tm_lines() +
tm_shape(data$osm_polygons) +
tm_fill(col = "green", alpha = 0.5) +
tm_borders()
